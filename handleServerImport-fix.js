// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è handleServerImport –¥–ª—è TenderTest.tsx
// –ó–∞–º–µ–Ω–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –±–ª–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö (—Å—Ç—Ä–æ–∫–∏ 1207-1233) –Ω–∞ —ç—Ç–æ—Ç –∫–æ–¥:

console.log('API Response:', {
  success: data.success,
  stats: data.stats,
  rawDataRows: data.data?.length || 0,
  timestamp: new Date().toISOString(),
})

if (data.success && data.data && data.data.length > 1) {
  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ Excel –≤ —Ñ–æ—Ä–º–∞—Ç EstimatePosition
  const rawData = data.data
  const headers = rawData[0] // –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ - –∑–∞–≥–æ–ª–æ–≤–∫–∏
  const dataRows = rawData.slice(1) // –û—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ - –¥–∞–Ω–Ω—ã–µ

  console.log('üìä –ü–∞—Ä—Å–∏–Ω–≥ –¥–∞–Ω–Ω—ã—Ö Excel:', {
    headers,
    rowsCount: dataRows.length,
  })

  const importedPositions = dataRows
    .filter(row => row && row.length > 0 && row.some(cell => cell))
    .map((row, index) => {
      // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–ª–æ–Ω–æ–∫ (–∞–¥–∞–ø—Ç–∏—Ä—É–π—Ç–µ –ø–æ–¥ –≤–∞—à—É —Ç–∞–±–ª–∏—Ü—É):
      // [‚Ññ, –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ, –¢–∏–ø –º–∞—Ç–µ—Ä–∏–∞–ª–∞, –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ, –ï–¥.–∏–∑–º, –û–±—ä–µ–º, –¶–µ–Ω–∞ —Ä–∞–±–æ—Ç, –¶–µ–Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤]
      const [
        number,
        justification,
        materialType,
        workName,
        unit,
        volume,
        workPrice,
        materialPrice,
      ] = row

      const volumeNum = parseFloat(volume) || 1
      const workPriceNum = parseFloat(workPrice) || 0
      const materialPriceNum = parseFloat(materialPrice) || 0

      return {
        id: `server-import-${Date.now()}-${index}`,
        number: number?.toString() || `${positions.length + index + 1}`,
        justification: justification || '—Ä–∞–±',
        materialType: materialType || undefined,
        workName: workName || '–ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è',
        unit: unit || '—à—Ç',
        volume: volumeNum,
        workPrice: workPriceNum,
        materialPrice: materialPriceNum || undefined,
        deliveryPrice: undefined,
        total: volumeNum * (workPriceNum + materialPriceNum),
        level: 1,
        created_at: new Date().toISOString(),
      }
    })

  // –û—Å—Ç–∞–ª—å–Ω–∞—è —á–∞—Å—Ç—å –∫–æ–¥–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –ø—Ä–µ–∂–Ω–µ–π...
  setPositions(prev => [...prev, ...importedPositions])

  setModifiedPositions(prev => {
    const newSet = new Set(prev)
    importedPositions.forEach(pos => newSet.add(pos.id))
    return newSet
  })

  message.success(
    `–£—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ ${importedPositions.length} –ø–æ–∑–∏—Ü–∏–π —Å —Å–µ—Ä–≤–µ—Ä–∞`
  )
  console.log('Server import result:', data)

  setGoogleSheetsModalVisible(false)
  setGoogleSheetsUrl('')
} else {
  message.error(data.message || '–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞')
}
